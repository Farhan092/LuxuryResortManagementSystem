<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gunaElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCheckOut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABDBJREFUaEPt
        WFlsE1cUDVIFavmBLyQEnje2kzgeO+NlGNtSQkIbUJD61aog0VAVSsISCGAUGxPAkDgJJJSSNGERUAiE
        KAjRgEtbsZhFAgFSVclsLQqr+OGHEJFNrLfvjWeiGhsInkmcSHOko/G8Gb97z9x371tSVKhQoUKFimRh
        0iTXpxqNebwSRMgyTux2aKDRZuQhsyOEUi29lD7zJUq39SnCNGsfpcP9Mfx9KtVSNmFC5ljRpLLQ6/Vj
        aCN3RMvldLGBRnAEL4Prwj+K0nkmDLbdv0LG7MIe2mh/TNMMK5pXDiiDa0v/6vteZ+haxOipMFhr9oLJ
        Uy2bbEVjjChrffMbZLB34mGnFV2QD4oyzqTtOd3O0+GIkW0HgFm2Drh9QXCFrsc4oRRNpYHXeKiFRDfk
        gzbx59nqXULnlto9wFbGfkHZPB/bRoYajkqvTmeaLLoiD1Qq2+f44y9wnvwbmKVrYwwOJvFwfkZpmTmi
        K4mDJDmuJq9Ip5Yte4E7dDKuwcGiscjzHAtxi+4kjokT7Z+hVPYF6dS0qgKc527GNfg+5tTthy9qdwCJ
        arzn7yOzxPdCgxiP6E7iiBKycmNcYx9i/ppK6HjyEH453ALzNlZDbvlP4DhxNe67bzPpQkg+kQgQ5nvL
        4fWrjn623wnDhrp6+NL77v64pt+Fa1KFkGqDk7R/nvj862+jhEh0V22O+3/CTP824ZpcIXiyNHs39d/n
        zS36aCFJjYhj/VbILikD/vilqNk6ESGSraQI4QINsP14EKaVrI5K5kSEJH1o2QLbofzAIZjhXgv8sUtC
        WyJCJA6ZEIcnALN8G6I4Z10Abjz4F6YWe/HS45YgpP3edWg+dnTAQsy+yLMhE8KX1cDcyh+jWOCvgtuP
        2iG7yA0uPIESIXtaW+CbYveAhSQ1RwhtpQGob2uDrEWrwPHbFaFtRCb7jmAQcvCQ+v/Ga8QJcfq3QlbJ
        GuCxCO7gn/3tI06IRCUmxGEjhLwrrbXyChaMUCG4UpHyKa21ps8vjhIwkEXjsBDyNsky/s7da+Cv+xlm
        VdRCVkMzSIcY7+KwFJLIxmpQhZjLtnyUM3KouBCMUeRE0XX2BkxpDQFbtTPGqNIUql5ppfA747ulPQgZ
        F4q+yAPNTHkk7Q9My/0D3qYmShINacGpy8rvRMiUK7oiD8hgrTIUFPeSjsnXMi7yANei/GmKULbdFWDf
        dVS4tzedAGy7IyU39xPRFXkQTsvTrE9tja0Rg7i8suUNwCz2CYalMiuHOBeAKVmPI3ExYuN0GHSuvC6N
        zlwouqEMKMrsogy2rkxfzRuSL9JXHAySSGhd07tpht8tmlcWCJkNtJG/jEx8T/rswmc4In1K0vjDym59
        9sxOlG57SqdZlI1EPBBBpJLgsuhVkggxK8iBOcMwo0VTKlSoUKFCxRAgJeU/bNuSHdMnRwUAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>